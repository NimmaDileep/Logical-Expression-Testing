        -:    0:Source:main.c
        -:    0:Graph:main.gcno
        -:    0:Data:-
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:#include <stdlib.h>
        -:    2:#include <stdio.h>
        -:    3:
        -:    4:int Cur_Vertical_Sep;
        -:    5:int High_Confidence;
        -:    6:int Two_of_Three_Reports_Valid;
        -:    7:int Own_Tracked_Alt;
        -:    8:int Own_Tracked_Alt_Rate;
        -:    9:int Other_Tracked_Alt;
        -:   10:int Alt_Layer_Value;
        -:   11:int Up_Separation;
        -:   12:int Down_Separation;
        -:   13:int Other_RAC;
        -:   14:int Other_Capability;
        -:   15:int Climb_Inhibit;
        -:   16:
        -:   17:int Positive_RA_Alt_Thresh_0;
        -:   18:int Positive_RA_Alt_Thresh_1;
        -:   19:int Positive_RA_Alt_Thresh_2;
        -:   20:int Positive_RA_Alt_Thresh_3;
        -:   21:
    #####:   22:int Own_Below_Threat()
        -:   23:{
    #####:   24:    return (Own_Tracked_Alt < Other_Tracked_Alt);
        -:   25:}
        -:   26:
    #####:   27:int Own_Above_Threat()
        -:   28:{
    #####:   29:    return (Other_Tracked_Alt < Own_Tracked_Alt);
        -:   30:}
        -:   31:
    #####:   32:void initialize()
        -:   33:{
    #####:   34:    High_Confidence = 32767;
    #####:   35:    Other_Capability = 0;
        -:   36:
    #####:   37:    Climb_Inhibit = 1;
    #####:   38:    Cur_Vertical_Sep = 16684;
    #####:   39:    Own_Tracked_Alt_Rate = 450;
        -:   40:
    #####:   41:    Positive_RA_Alt_Thresh_0 = 16434;
    #####:   42:    Positive_RA_Alt_Thresh_1 = 0;
    #####:   43:    Positive_RA_Alt_Thresh_2 = 0;
    #####:   44:    Positive_RA_Alt_Thresh_3 = 0;
    #####:   45:}
        -:   46:
    #####:   47:int Positive_RA_Alt_Thresh(int Alt)
        -:   48:{
    #####:   49:    int res = 0;
        -:   50:
    #####:   51:    if(Alt == 0) {
    #####:   52:        res = Positive_RA_Alt_Thresh_0;
    #####:   53:    }
    #####:   54:    else if(Alt == 1) {
    #####:   55:        res = Positive_RA_Alt_Thresh_1;
    #####:   56:    }
    #####:   57:    else if( Alt == 2) {
    #####:   58:        res = Positive_RA_Alt_Thresh_2;
    #####:   59:    }
    #####:   60:    else if(Alt == 3) {
    #####:   61:        res = Positive_RA_Alt_Thresh_3;
    #####:   62:    }
    #####:   63:    return res;
        -:   64:}
        -:   65:
    #####:   66:int ALIM ()
        -:   67:{
    #####:   68:    return Positive_RA_Alt_Thresh(Alt_Layer_Value);
        -:   69:}
        -:   70:
    #####:   71:int Inhibit_Biased_Climb ()
        -:   72:{
    #####:   73:    return Climb_Inhibit ? Up_Separation + 100 : Up_Separation;
        -:   74:}
        -:   75:
    #####:   76:int Non_Crossing_Biased_Climb()
        -:   77:{
        -:   78:    int upward_preferred;
        -:   79:    int upward_crossing_situation;
        -:   80:    int result;
        -:   81:
    #####:   82:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
        -:   83:
    #####:   84:    if (upward_preferred)
        -:   85:    {
    #####:   86:        result = !(Own_Below_Threat()) || ((Own_Below_Threat()) && (!(Down_Separation >= ALIM())));
    #####:   87:    }
        -:   88:    else
        -:   89:    {
    #####:   90:        result = Own_Above_Threat() && (Cur_Vertical_Sep >= 300 ) && (Up_Separation >= ALIM());
        -:   91:    }
        -:   92:
    #####:   93:    return result;
        -:   94:}
        -:   95:
    #####:   96:int Non_Crossing_Biased_Descend()
        -:   97:{
        -:   98:    int upward_preferred;
        -:   99:    int upward_crossing_situation;
        -:  100:    int result;
        -:  101:
    #####:  102:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
        -:  103:
    #####:  104:    if (upward_preferred)
        -:  105:    {
    #####:  106:        result = Own_Below_Threat() && (Cur_Vertical_Sep >= 300) && (Down_Separation >= ALIM());
    #####:  107:    }
        -:  108:    else
        -:  109:    {
    #####:  110:        result = !(Own_Above_Threat()) || ((Own_Above_Threat()) && (Up_Separation >= ALIM()));
        -:  111:    }
        -:  112:
    #####:  113:    return result;
        -:  114:}
        -:  115:
    #####:  116:int alt_sep_test()
        -:  117:{
        -:  118:    int enabled, tcas_equipped, intent_not_known;
    #####:  119:    int need_upward_RA = 0;
    #####:  120:    int need_downward_RA = 0;
        -:  121:
        -:  122:    int alt_sep;
        -:  123:
    #####:  124:    enabled = High_Confidence && (Own_Tracked_Alt_Rate <= 600) && (Cur_Vertical_Sep > 600);
    #####:  125:    tcas_equipped = Other_Capability == 1 ;
    #####:  126:    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == 0 ;
        -:  127:
    #####:  128:    alt_sep = 0 ;
        -:  129:
    #####:  130:    if (enabled && ((tcas_equipped && intent_not_known) || !tcas_equipped))
        -:  131:    {
    #####:  132:        need_upward_RA = Non_Crossing_Biased_Climb() && Own_Below_Threat() ;
    #####:  133:        need_downward_RA = Non_Crossing_Biased_Descend() && Own_Above_Threat();
        -:  134:
    #####:  135:        if(need_upward_RA && need_downward_RA) {
    #####:  136:            alt_sep = 0;
    #####:  137:        }
        -:  138:        else {
    #####:  139:            if (need_upward_RA) {
    #####:  140:                alt_sep = 1;
    #####:  141:            }
    #####:  142:            else if (need_downward_RA) {
    #####:  143:                alt_sep = 2;
    #####:  144:            }
        -:  145:            else {
    #####:  146:                alt_sep = 0 ;
        -:  147:            }
        -:  148:        }
    #####:  149:    }
        -:  150:
    #####:  151:    return alt_sep;
        -:  152:}
        -:  153:
    #####:  154:int main(int argc, char *argv[])
        -:  155:{
    #####:  156:    if(argc < 13)
        -:  157:    {
    #####:  158:        fprintf(stderr, "Error: Command line arguments are\n");
    #####:  159:        fprintf(stderr, "Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\n");
    #####:  160:        fprintf(stderr, "Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\n");
    #####:  161:        fprintf(stderr, "Alt_Layer_Value, Up_Separation, Down_Separation\n");
    #####:  162:        fprintf(stderr, "Other_RAC, Other_Capability, Climb_Inhibit\n");
    #####:  163:        exit(1);
        -:  164:    }
    #####:  165:    initialize();
        -:  166:
    #####:  167:    Cur_Vertical_Sep = atoi(argv[1]);
    #####:  168:    High_Confidence = atoi(argv[2]);
    #####:  169:    Two_of_Three_Reports_Valid = atoi(argv[3]);
    #####:  170:    Own_Tracked_Alt = atoi(argv[4]);
    #####:  171:    Own_Tracked_Alt_Rate = atoi(argv[5]);
    #####:  172:    Other_Tracked_Alt = atoi(argv[6]);
    #####:  173:    Alt_Layer_Value = atoi(argv[7]);
    #####:  174:    Up_Separation = atoi(argv[8]);
    #####:  175:    Down_Separation = atoi(argv[9]);
    #####:  176:    Other_RAC = atoi(argv[10]);
    #####:  177:    Other_Capability = atoi(argv[11]);
    #####:  178:    Climb_Inhibit = atoi(argv[12]);
        -:  179:
    #####:  180:    fprintf(stderr, "%d\n", alt_sep_test());
    #####:  181:}
